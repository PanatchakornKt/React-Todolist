{"ast":null,"code":"var _jsxFileName = \"/Users/panatchakorn/Project/todolist/src/components/AddTodo.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddTodo = ({\n  todos,\n  setTodos,\n  filterHandle\n}) => {\n  _s();\n\n  const [input, setInput] = useState(\"\");\n  const [status, setStatus] = useState(\"all\");\n\n  const onInputChange = e => {\n    setInput(e.target.value);\n  };\n\n  const onFormSubmit = e => {\n    e.preventDefault();\n    setTodos([...todos, {\n      id: Math.random() * 1000,\n      title: input,\n      completed: false\n    }]);\n    setInput('');\n  };\n\n  const statusHandle = e => {\n    setStatus(e.target.value);\n  };\n\n  useEffect(() => {\n    const filterHandle = () => {\n      switch (status) {\n        case \"completed\":\n          setFilteredTodos(todos.filter(todo => todo.completed === true));\n          break;\n\n        case \"uncompleted\":\n          setFilteredTodos(todos.filter(todo => todo.completed === false));\n          break;\n\n        default:\n          setFilteredTodos(todos);\n          break;\n      }\n    };\n\n    filterHandle();\n  }, [todos, status]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"container mx-auto px-6 py-3\",\n      onSubmit: onFormSubmit,\n      children: [\"TO DO :\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Add a task...\",\n        value: input,\n        required: true,\n        onChange: onInputChange,\n        className: \"rounded-sm px-2 py-2 mt-2 ml-2 focus:outline-none bg-gray-100\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"ml-2 puppercase font-semibold tracking-wide bg-gray-100 text-gray-700 px-2 py-2 rounded-sm mt-2 focus:outline-none hover:bg-yellow-200\",\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: statusHandle,\n        name: \"todos\",\n        className: \"filter-todo ml-3 border border-gray-300 rounded-full text-gray-600 h-8 pl-5 pr-5 bg-white hover:border-gray-400 focus:outline-none appearance-none\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"All Tasks \\u25BC \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"completed\",\n          children: \"Completed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"uncompleted\",\n          children: \"Uncompleted\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AddTodo, \"5IActNXtDbAjeESV3CQOWV5P9kk=\");\n\n_c = AddTodo;\nexport default AddTodo;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddTodo\");","map":{"version":3,"sources":["/Users/panatchakorn/Project/todolist/src/components/AddTodo.js"],"names":["React","useState","useEffect","AddTodo","todos","setTodos","filterHandle","input","setInput","status","setStatus","onInputChange","e","target","value","onFormSubmit","preventDefault","id","Math","random","title","completed","statusHandle","setFilteredTodos","filter","todo"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;;;AAEA,MAAMC,OAAO,GAAG,CAAC;AAACC,EAAAA,KAAD;AAAQC,EAAAA,QAAR;AAAkBC,EAAAA;AAAlB,CAAD,KAAqC;AAAA;;AACnD,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;AACI,QAAM,CAACQ,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,KAAD,CAApC;;AAEF,QAAMU,aAAa,GAAIC,CAAD,IAAO;AACzBJ,IAAAA,QAAQ,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV,CAAR;AACH,GAFD;;AAIA,QAAMC,YAAY,GAAIH,CAAD,IAAO;AACxBA,IAAAA,CAAC,CAACI,cAAF;AACIX,IAAAA,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAW;AAACa,MAAAA,EAAE,EAAEC,IAAI,CAACC,MAAL,KAAgB,IAArB;AAA2BC,MAAAA,KAAK,EAAEb,KAAlC;AAAyCc,MAAAA,SAAS,EAAE;AAApD,KAAX,CAAD,CAAR;AACAb,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACH,GAJL;;AAMA,QAAMc,YAAY,GAAIV,CAAD,IAAO;AACxBF,IAAAA,SAAS,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAAT;AACH,GAFD;;AAIFZ,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMI,YAAY,GAAG,MAAM;AACzB,cAAQG,MAAR;AACE,aAAK,WAAL;AACEc,UAAAA,gBAAgB,CAACnB,KAAK,CAACoB,MAAN,CAAcC,IAAD,IAAUA,IAAI,CAACJ,SAAL,KAAmB,IAA1C,CAAD,CAAhB;AACA;;AACF,aAAK,aAAL;AACEE,UAAAA,gBAAgB,CAACnB,KAAK,CAACoB,MAAN,CAAcC,IAAD,IAAUA,IAAI,CAACJ,SAAL,KAAmB,KAA1C,CAAD,CAAhB;AACA;;AACF;AACEE,UAAAA,gBAAgB,CAACnB,KAAD,CAAhB;AACA;AATJ;AAWD,KAZD;;AAaAE,IAAAA,YAAY;AACb,GAfQ,EAeN,CAACF,KAAD,EAAQK,MAAR,CAfM,CAAT;AAiBE,sBACI;AAAA,2BACA;AACA,MAAA,SAAS,EAAG,6BADZ;AAEA,MAAA,QAAQ,EAAEM,YAFV;AAAA,yCAII;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,WAAW,EAAC,eAA/B;AACA,QAAA,KAAK,EAAGR,KADR;AAEA,QAAA,QAAQ,MAFR;AAGA,QAAA,QAAQ,EAAEI,aAHV;AAIA,QAAA,SAAS,EAAG;AAJZ;AAAA;AAAA;AAAA;AAAA,cAJJ,eAUI;AACA,QAAA,IAAI,EAAC,QADL;AAEA,QAAA,SAAS,EAAE,wIAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAVJ,eAeI;AACA,QAAA,QAAQ,EAAIW,YADZ;AAEA,QAAA,IAAI,EAAC,OAFL;AAGA,QAAA,SAAS,EAAC,oJAHV;AAAA,gCAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ,eAKI;AAAQ,UAAA,KAAK,EAAG,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALJ,eAMI;AAAQ,UAAA,KAAK,EAAG,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAfJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UADJ;AA4BH,CA/DD;;GAAMnB,O;;KAAAA,O;AAgEN,eAAeA,OAAf","sourcesContent":["import React, {useState, useEffect} from 'react'\n\nconst AddTodo = ({todos, setTodos, filterHandle}) => {\n  const [input, setInput] = useState(\"\");\n      const [status, setStatus] = useState(\"all\");\n\n    const onInputChange = (e) => {\n        setInput(e.target.value)\n    }\n\n    const onFormSubmit = (e) => {\n        e.preventDefault()\n            setTodos([...todos, {id: Math.random() * 1000, title: input, completed: false}])\n            setInput('')\n        }\n\n    const statusHandle = (e) => {\n        setStatus(e.target.value)\n    }\n\n  useEffect(() => {\n    const filterHandle = () => {\n      switch (status) {\n        case \"completed\":\n          setFilteredTodos(todos.filter((todo) => todo.completed === true));\n          break;\n        case \"uncompleted\":\n          setFilteredTodos(todos.filter((todo) => todo.completed === false));\n          break;\n        default:\n          setFilteredTodos(todos);\n          break;\n      }\n    };\n    filterHandle();\n  }, [todos, status]);\n\n    return (\n        <div> \n        <form \n        className = \"container mx-auto px-6 py-3\"\n        onSubmit={onFormSubmit}>\n            TO DO :  \n            <input type=\"text\" placeholder=\"Add a task...\"\n            value= {input}\n            required\n            onChange={onInputChange}\n            className = \"rounded-sm px-2 py-2 mt-2 ml-2 focus:outline-none bg-gray-100\"\n            />\n            <button \n            type=\"submit\"\n            className =\"ml-2 puppercase font-semibold tracking-wide bg-gray-100 text-gray-700 px-2 py-2 rounded-sm mt-2 focus:outline-none hover:bg-yellow-200\">\n            +\n            </button>\n            <select \n            onChange = {statusHandle}\n            name=\"todos\" \n            className=\"filter-todo ml-3 border border-gray-300 rounded-full text-gray-600 h-8 pl-5 pr-5 bg-white hover:border-gray-400 focus:outline-none appearance-none\">\n                <option >All Tasks â–¼ </option>\n                <option value = \"completed\">Completed</option>\n                <option value = \"uncompleted\">Uncompleted</option>\n            </select>\n        </form>\n        </div>\n    )\n}\nexport default AddTodo"]},"metadata":{},"sourceType":"module"}