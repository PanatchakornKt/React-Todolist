{"ast":null,"code":"var _jsxFileName = \"/Users/panatchakorn/Project/todolist/src/components/Todolist.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Addtodo from './Addtodo';\nimport Todo from './Todo';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Todolist() {\n  _s();\n\n  const [todos, setTodos] = useState([]);\n\n  const addTodo = todo => {\n    if (!todo.text || /^\\s*$/.test(todo.text)) {\n      return;\n    }\n\n    const newTodos = [todo, ...todos];\n    setTodos(newTodos);\n  };\n\n  const completeTodo = id => {\n    let updatedTodos = todos.map(todo => {\n      if (todo.id === id) {\n        todo.isComplete = !todo.isComplete;\n      }\n\n      return todo;\n    });\n    setTodos(updatedTodos);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Addtodo, {\n      onSubmit: addTodo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Todo, {\n      todos: todos,\n      completeTodo: completeTodo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Todolist, \"ZATHeV9x55jFrDOww2hwcxQ3V1U=\");\n\n_c = Todolist;\nexport default Todolist;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todolist\");","map":{"version":3,"sources":["/Users/panatchakorn/Project/todolist/src/components/Todolist.js"],"names":["React","useState","Addtodo","Todo","Todolist","todos","setTodos","addTodo","todo","text","test","newTodos","completeTodo","id","updatedTodos","map","isComplete"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;;AAEA,SAASC,QAAT,GAAmB;AAAA;;AACnB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;;AAEA,QAAMM,OAAO,GAAGC,IAAI,IAAI;AACpB,QAAG,CAACA,IAAI,CAACC,IAAN,IAAc,QAAQC,IAAR,CAAaF,IAAI,CAACC,IAAlB,CAAjB,EAAyC;AACrC;AACH;;AACD,UAAME,QAAQ,GAAG,CAACH,IAAD,EAAO,GAAGH,KAAV,CAAjB;AACAC,IAAAA,QAAQ,CAACK,QAAD,CAAR;AACH,GAND;;AAQA,QAAMC,YAAY,GAAGC,EAAE,IAAI;AACvB,QAAIC,YAAY,GAAGT,KAAK,CAACU,GAAN,CAAUP,IAAI,IAAI;AACjC,UAAIA,IAAI,CAACK,EAAL,KAAYA,EAAhB,EAAmB;AACfL,QAAAA,IAAI,CAACQ,UAAL,GAAiB,CAAER,IAAI,CAACQ,UAAxB;AACH;;AACD,aAAOR,IAAP;AACH,KALkB,CAAnB;AAMAF,IAAAA,QAAQ,CAACQ,YAAD,CAAR;AACH,GARD;;AAUI,sBACI;AAAA,4BACI,QAAC,OAAD;AAAS,MAAA,QAAQ,EAAEP;AAAnB;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,IAAD;AAAM,MAAA,KAAK,EAAEF,KAAb;AAAqB,MAAA,YAAY,EAAEO;AAAnC;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH;;GA5BQR,Q;;KAAAA,Q;AA6BT,eAAeA,QAAf","sourcesContent":["import React, {useState} from 'react'\nimport Addtodo from './Addtodo'\nimport Todo from './Todo'\n\nfunction Todolist(){\nconst [todos, setTodos] = useState([])\n\nconst addTodo = todo => {\n    if(!todo.text || /^\\s*$/.test(todo.text)){\n        return\n    }\n    const newTodos = [todo, ...todos]\n    setTodos(newTodos)\n}\n\nconst completeTodo = id => {\n    let updatedTodos = todos.map(todo => {\n        if (todo.id === id){\n            todo.isComplete =! todo.isComplete\n        }\n        return todo;\n    })\n    setTodos(updatedTodos)\n}\n\n    return (\n        <div>\n            <Addtodo onSubmit={addTodo}/>\n            <Todo todos={todos}  completeTodo={completeTodo}/>\n\n        </div>\n    )\n}\nexport default Todolist;\n\n"]},"metadata":{},"sourceType":"module"}