{"ast":null,"code":"var _jsxFileName = \"/Users/panatchakorn/Project/todolist/src/components/Form.js\";\nimport React, { useState } from 'react';\nimport { v4 as uuidv4 } from \"uuid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Form = ({\n  input,\n  setInput,\n  todos,\n  setTodos,\n  editTodo,\n  setEditTodo\n}) => {\n  const updateTodo = (title, id, completed) => {\n    const newTodo = todos.map(todo => todo.id === id ? {\n      title,\n      id,\n      completed\n    } : todo);\n    setTodos(newTodo);\n    setEditTodo(\"\");\n  };\n\n  const onInputChange = event => {\n    setInput(event.target.value);\n  };\n\n  const onFormSubmit = event => {\n    event.preventDefault();\n\n    if (!editTodo) {\n      setTodos([...todos, {\n        id: uuidv4(),\n        title: input,\n        completed: false\n      }]);\n      setInput('');\n    } else {\n      updateTodo(input, editTodo.id, editTodo.completed);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: onFormSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Add a task...\",\n      value: input,\n      required: true,\n      onChange: onInputChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["/Users/panatchakorn/Project/todolist/src/components/Form.js"],"names":["React","useState","v4","uuidv4","Form","input","setInput","todos","setTodos","editTodo","setEditTodo","updateTodo","title","id","completed","newTodo","map","todo","onInputChange","event","target","value","onFormSubmit","preventDefault"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAAQC,EAAE,IAAIC,MAAd,QAA2B,MAA3B;;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAACC,EAAAA,KAAD;AAAQC,EAAAA,QAAR;AAAkBC,EAAAA,KAAlB;AAAyBC,EAAAA,QAAzB;AAAmCC,EAAAA,QAAnC;AAA6CC,EAAAA;AAA7C,CAAD,KAA+D;AAExE,QAAMC,UAAU,GAAG,CAACC,KAAD,EAAQC,EAAR,EAAYC,SAAZ,KAA0B;AACzC,UAAMC,OAAO,GAAGR,KAAK,CAACS,GAAN,CAAWC,IAAD,IACtBA,IAAI,CAACJ,EAAL,KAAYA,EAAZ,GAAiB;AAACD,MAAAA,KAAD;AAAQC,MAAAA,EAAR;AAAYC,MAAAA;AAAZ,KAAjB,GAA0CG,IAD9B,CAAhB;AAGAT,IAAAA,QAAQ,CAACO,OAAD,CAAR;AACAL,IAAAA,WAAW,CAAC,EAAD,CAAX;AACH,GAND;;AAOA,QAAMQ,aAAa,GAAIC,KAAD,IAAW;AAC7Bb,IAAAA,QAAQ,CAACa,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAR;AACH,GAFD;;AAIA,QAAMC,YAAY,GAAIH,KAAD,IAAW;AAC5BA,IAAAA,KAAK,CAACI,cAAN;;AACA,QAAG,CAACd,QAAJ,EAAa;AACTD,MAAAA,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAW;AAACM,QAAAA,EAAE,EAAEV,MAAM,EAAX;AAAeS,QAAAA,KAAK,EAAEP,KAAtB;AAA6BS,QAAAA,SAAS,EAAE;AAAxC,OAAX,CAAD,CAAR;AACAR,MAAAA,QAAQ,CAAC,EAAD,CAAR;AACH,KAHD,MAGM;AACFK,MAAAA,UAAU,CAACN,KAAD,EAAQI,QAAQ,CAACI,EAAjB,EAAqBJ,QAAQ,CAACK,SAA9B,CAAV;AACH;AAEJ,GATD;;AAUA,sBACI;AAAM,IAAA,QAAQ,EAAEQ,YAAhB;AAAA,4BACI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,WAAW,EAAC,eAA/B;AACA,MAAA,KAAK,EAAGjB,KADR;AAEA,MAAA,QAAQ,MAFR;AAGA,MAAA,QAAQ,EAAEa;AAHV;AAAA;AAAA;AAAA;AAAA,YADJ,eAMI;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH,CAnCD;;KAAMd,I;AAoCN,eAAeA,IAAf","sourcesContent":["import React, {useState} from 'react'\nimport {v4 as uuidv4} from \"uuid\"\n\nconst Form = ({input, setInput, todos, setTodos, editTodo, setEditTodo}) => {\n\n    const updateTodo = (title, id, completed) => {\n        const newTodo = todos.map((todo) =>\n            todo.id === id ? {title, id, completed} : todo\n        )\n        setTodos(newTodo)\n        setEditTodo(\"\")\n    }\n    const onInputChange = (event) => {\n        setInput(event.target.value)\n    }\n\n    const onFormSubmit = (event) => {\n        event.preventDefault()\n        if(!editTodo){\n            setTodos([...todos, {id: uuidv4(), title: input, completed: false}])\n            setInput('')\n        }else {\n            updateTodo(input, editTodo.id, editTodo.completed)\n        }\n\n    }\n    return (\n        <form onSubmit={onFormSubmit}>\n            <input type=\"text\" placeholder=\"Add a task...\"\n            value= {input}\n            required\n            onChange={onInputChange}\n            />\n            <button type=\"submit\"> \n            Add\n            </button>\n        </form>\n    )\n}\nexport default Form"]},"metadata":{},"sourceType":"module"}